version: '3'
services:
  #PHP Service
  app:
    build:
      context: .
      dockerfile: Dockerfile
    image: php:7.3-fpm
    container_name: app
    restart: unless-stopped
    tty: true
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
    working_dir: /var/www
    volumes:
      - ./:/var/www
      - ./php/mongo.ini:/usr/local/etc/php/conf.d/mongo.ini
    networks:
      - kd-network
  #Nginx Service
  webserver:
    image: nginx:alpine
    container_name: webserver
    restart: unless-stopped
    tty: true
    ports:
      - "8080:80"
      - "8443:443"
    volumes:
      - ./:/var/www
      - ./nginx/conf.d/:/etc/nginx/conf.d/
    networks:
      - kd-network
  #MySQL Service
  db:
    image: mysql:5.7.24
    container_name: db
    restart: unless-stopped
    tty: true
    ports:
      - "33061:3306"
    environment:
      MYSQL_DATABASE: laravel
      MYSQL_ROOT_PASSWORD: root
      SERVICE_TAGS: dev
      SERVICE_NAME: mysql
    volumes:
      - ./dbdata:/var/lib/mysql/
      - ./mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - kd-network
  #MongoDB Service
  mongodb:
    container_name: mongodb
    image: mongo
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: root
      MONGO_INITDB_DATABASE: laravel
    volumes:
    - ./mongodbdata:/data/db/
    - ./mongodb/mongo-init.sh:/docker-entrypoint-initdb.d/mongo-init.js:ro
    ports:
      - 27017:27017
    logging:
      driver: none
    networks:
      - kd-network
  #PHPMyAdmin
  phpmadmin:
    image: phpmyadmin/phpmyadmin
    container_name: phpmyadmin
    restart: unless-stopped
    ports:
      - "8081:80"
    networks:
      - kd-network
#Docker Networks
networks:
  kd-network:
    driver: bridge
#Volumes
volumes:
  dbdata:
    driver: local
